{"version":3,"file":"static/js/586.a2217478.chunk.js","mappings":"8NAEaA,EAAOC,EAAAA,GAAAA,KAAH,+JASJC,EAAQD,EAAAA,GAAAA,MAAH,mFAMLE,EAAQF,EAAAA,GAAAA,MAAH,kF,2BCjBLG,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAAnB,EAErBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,E,SCIzBC,EAAgB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAiBC,EAAAA,EAAAA,IAAYX,GAcnC,OACE,UAACR,EAAD,CAAMoB,SAba,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACON,EAAeO,QACrC,SAAAC,GAAO,OAAIA,EAAQZ,KAAKa,gBAAkBb,EAAKa,aAAxC,IAEOC,OACZC,MAAM,GAAD,OAAIf,EAAJ,4BACLH,GAASmB,EAAAA,EAAAA,IAAW,CAAEhB,KAAAA,EAAME,OAAAA,KAChCO,EAAKQ,OACN,EAG+BC,aAAa,MAA3C,WACE,UAAC9B,EAAD,mBAEE,SAACC,EAAD,CACE8B,KAAK,OACLnB,KAAK,OACLoB,SAAU,SAAAb,GAAG,OAAIN,EAAQM,EAAIc,OAAOC,MAAvB,EACbC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACrC,EAAD,oBAEE,SAACC,EAAD,CACE8B,KAAK,MACLnB,KAAK,SACLoB,SAAU,SAAAb,GAAG,OAAIJ,EAAUI,EAAIc,OAAOC,MAAzB,EACbC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQN,KAAK,SAAb,2BAGL,ECjDYO,EAAYvC,EAAAA,GAAAA,GAAH,6CAITwC,EAAWxC,EAAAA,GAAAA,GAAH,qECJRyC,EAAezC,EAAAA,GAAAA,IAAH,kGCEZ0C,EAAU,SAAC,GAAiB,IAAfjB,EAAc,EAAdA,QAClBf,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAAC8B,EAAD,YACE,0BACE,0BAAOhB,EAAQZ,QACf,kCACA,0BAAOY,EAAQV,OAAO4B,iBAExB,mBAAQX,KAAK,SAASY,QATL,kBAAMlC,GAASmC,EAAAA,EAAAA,IAAcpB,EAAQqB,IAArC,EASjB,sBAKL,ECfYC,EAAc,WACzB,IAAM1C,GAAWa,EAAAA,EAAAA,IAAYX,GAE7B,OACE,SAACgC,EAAD,UACGlC,EAAS2C,KAAI,SAAAvB,GAAO,OACnB,SAACe,EAAD,WACE,SAACE,EAAD,CAASjB,QAASA,KADLA,EAAQqB,GADJ,KAO1B,ECVc,SAASG,IACtB,IAAMC,GAAYhC,EAAAA,EAAAA,IAAYf,GACxBO,GAAWC,EAAAA,EAAAA,MAMjB,OAJAwC,EAAAA,EAAAA,YAAU,WACRzC,GAAS0C,EAAAA,EAAAA,MACV,GAAE,CAAC1C,KAGF,iCACE,uCACA,SAACD,EAAD,KACA,qCACCyC,GAAY,uDAAsC,SAACH,EAAD,MAGxD,C","sources":["components/ContactEditor/ContactEditor.styled.js","redux/contacts/selectors.js","components/ContactEditor/ContactEditor.jsx","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: 1px solid black;\n  border-radius: 4px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 16px;\n  max-width: 300px;\n`;\n\nexport const Field = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  font: inherit;\n  margin-bottom: 8px;\n`;\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { Field, Form, Input } from './ContactEditor.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const storedContacts = useSelector(selectAllContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const existingContact = storedContacts.filter(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    existingContact.length\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Field>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={evt => setName(evt.target.value)}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Field>\n      <Field>\n        Phone\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          onChange={evt => setNumber(evt.target.value)}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Field>\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ItemsList = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const ListItem = styled.li`\n  padding-top: 4px;\n  padding-bottom: 4px;\n`;\n","import styled from 'styled-components';\n\nexport const ContactBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 300px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { ContactBlock } from './Contact.styled';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <ContactBlock>\n      <p>\n        <span>{contact.name}</span>\n        <span>: </span>\n        <span>{contact.number.toString()}</span>\n      </p>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </ContactBlock>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { ItemsList, ListItem } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n\n  return (\n    <ItemsList>\n      {contacts.map(contact => (\n        <ListItem key={contact.id}>\n          <Contact contact={contact} />\n        </ListItem>\n      ))}\n    </ItemsList>\n  );\n};\n","import { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactEditor />\n      <h2>Contacts</h2>\n      {isLoading ? <div>'Request in progress...'</div> : <ContactList />}\n    </>\n  );\n}\n"],"names":["Form","styled","Field","Input","selectLoading","state","contacts","loading","selectAllContacts","items","ContactEditor","dispatch","useDispatch","useState","name","setName","number","setNumber","storedContacts","useSelector","onSubmit","evt","preventDefault","form","currentTarget","filter","contact","toLowerCase","length","alert","addContact","reset","autoComplete","type","onChange","target","value","pattern","title","required","ItemsList","ListItem","ContactBlock","Contact","toString","onClick","deleteContact","id","ContactList","map","Contacts","isLoading","useEffect","fetchContacts"],"sourceRoot":""}